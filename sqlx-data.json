{
  "db": "PostgreSQL",
  "02b7b1c5a33719f7d94085345c84b3a76671eec7dc36e735542364b2d76ee059": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "SELECT a.*, count(1) over() as \"cnt!\" FROM nft_auction_search a WHERE a.address = ANY($1)"
  },
  "0ce39f4394adfd29cf3684b8ce5df82d9fbdd6d9b288d2da5b4902ef68aba991": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "seller",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            select\n                s.address as \"address!\",\n                s.created as \"created!\",\n                s.updated as \"updated!\",\n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\",\n                s.collection,\n                s.seller,\n                s.price_token as \"price_token!\",\n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at,\n                s.expired_at,\n                s.state as \"state!: _\",\n                count (1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_sell_usd s\n            where s.address = $1\n            "
  },
  "0e817af2f6b0d1db48d2551845b1aba5432edebe82877a7139886112a6250acf": {
    "describe": {
      "columns": [
        {
          "name": "collection",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "trait_type",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "values",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        true,
        false,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n        select a.collection, a.trait_type, jsonb_agg(a.value) as values\n        from (\n            select distinct a.collection, a.trait_type, a.value\n            from nft_attributes a\n            where a.collection is not null and a.trait_type is not null\n            order by a.collection ASC, a.trait_type ASC, a.value ASC\n        ) as a\n        group by a.collection, a.trait_type\n        "
  },
  "1d538d9a9c98bb350a861b53d42d808a1bb87719542c8cc4865507f780ed3548": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "owner",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "manager",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "burned",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "updated",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "meta",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "auction",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "auction_status: _",
          "ordinal": 11,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "forsale",
          "ordinal": 12,
          "type_info": "Varchar"
        },
        {
          "name": "forsale_status: _",
          "ordinal": 13,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "best_offer",
          "ordinal": 14,
          "type_info": "Varchar"
        },
        {
          "name": "floor_price_usd",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "deal_price_usd",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price_token",
          "ordinal": 18,
          "type_info": "Varchar"
        },
        {
          "name": "nft_id",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "total_count!",
          "ordinal": 20,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n                SELECT n.*, 1::bigint as \"total_count!\"\n                FROM nft_details n\n                WHERE n.address = ANY($1)\n            "
  },
  "1efd827e5354b90eb4e332600fd402e1c814280a52587283194d18b22a2c14ab": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "TextArray",
          "TextArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT a.*,  count (1) over () as \"cnt!\"\n                FROM nft_auction_search a\n                INNER JOIN nft n ON a.nft = n.address\n                WHERE\n                (n.owner = ANY($1) OR array_length($1::varchar[], 1) is null)\n                AND (n.collection = ANY($2) OR array_length($2::varchar[], 1) is null)\n                AND (a.nft = ANY($3) OR array_length($3::varchar[], 1) is null)\n                ORDER BY a.created_at DESC\n                LIMIT $4 OFFSET $5"
  },
  "24d2610afe057c9a3f4ea6e4036348581a0ea59bcad7b19ada9548b24e5bb7e3": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                count(1)\n            from nft n\n            join nft_collection c \n                on n.collection = c.address\n            join nft_direct_sell nds\n                on nds.nft = n.address and \n                   nds.created <= now() and\n                   (now() <= nds.expired_at or nds.expired_at = to_timestamp(0)) and\n                    nds.state = 'active' and\n                    nds.price <= $1::int8\n            join roots r \n                on nds.root = r.address\n            where n.burned = false and\n                  c.verified = true\n           "
  },
  "24ecd131464bbe6c55be833a5101ce405bf9463669ec50f35d1b224c150f9d4e": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "buyer",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text",
          "TextArray",
          "VarcharArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                s.address as \"address!\", \n                s.created as \"created!\", \n                s.updated as \"updated!\", \n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\", \n                s.collection,\n                s.buyer,\n                s.price_token as \"price_token!\", \n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at, \n                s.expired_at,\n                s.state as \"state!: _\",\n                count(1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_buy_usd s\n            inner join nft n \n                on n.address = s.nft\n            where n.owner = $1 and\n                  (n.collection = any($2) or \n                   array_length($2::varchar[], 1) is null) and\n                  (array_length($3::varchar[], 1) is null or \n                   s.state::varchar = any($3))\n            order by s.updated desc \n            limit $4 \n            offset $5\n            "
  },
  "29be69adee4fbbe4f5a23cad79380baf4534b05f2c4a16dcbe1c82bd4c0c5d65": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "logo",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "verified!",
          "ordinal": 4,
          "type_info": "Bool"
        },
        {
          "name": "cnt!",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "nft_count!",
          "ordinal": 6,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Bool",
          "Varchar"
        ]
      }
    },
    "query": "\n            select\n                c.address        as \"address!\",\n                c.name,\n                c.description,\n                c.logo,\n                c.verified       as \"verified!\",\n                count(1) over () as \"cnt!\",\n                nft.count        as \"nft_count!\"\n            from nft_collection c\n            left join lateral (\n                select\n                    count(1) as count,\n                    count(distinct owner) as owners_count\n                from nft n\n                where n.collection = c.address\n            ) nft on true\n            where ($3::boolean is false or c.verified is true) and\n                  ($4::varchar is null or c.name ilike $4)\n            order by nft.owners_count desc\n            limit $1\n            offset $2\n            "
  },
  "347dab7b62b791a71d277c006d02fb93d5926327840e85d2760d451489b2fe6f": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "owner",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "manager",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "burned",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "updated",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "meta",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "auction",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "auction_status: _",
          "ordinal": 11,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "forsale",
          "ordinal": 12,
          "type_info": "Varchar"
        },
        {
          "name": "forsale_status: _",
          "ordinal": 13,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "best_offer",
          "ordinal": 14,
          "type_info": "Varchar"
        },
        {
          "name": "floor_price_usd",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "deal_price_usd",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price_token",
          "ordinal": 18,
          "type_info": "Varchar"
        },
        {
          "name": "nft_id",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "total_count!",
          "ordinal": 20,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select n.*, count(1) over () as \"total_count!\"\n            from nft_details n\n            join nft_collection nc\n                 on nc.address = n.collection and\n                    nc.verified\n            left join lateral (\n                select count(1) as cnt\n                from nft_auction na\n                join roots r on na.root = r.address\n                where n.address = na.nft and\n                      na.status = 'completed' and\n                      na.finished_at >= $1\n            ) auc on true\n            left join lateral ( \n                select count(1) as cnt\n                from nft_direct_sell na\n                join roots r on na.root = r.address\n                where n.address = na.nft and\n                      na.state = 'filled' and\n                      na.updated >= $1\n            ) ds on true\n            left join lateral (\n                select count(1) as cnt\n                from nft_direct_buy na\n                join roots r on na.root = r.address\n                where n.address = na.nft and\n                      na.state = 'filled' and\n                      na.updated >= $1\n            ) db on true\n            where n.updated >= $1 and\n                  auc.cnt + ds.cnt + db.cnt > 0\n            order by auc.cnt + ds.cnt + db.cnt desc, n.updated desc, n.address desc\n            limit $2 \n            offset $3\n            "
  },
  "3cd741aa6daedeaa448c2b8c086e52693e6e51ab0742cf66d55b0b0921efa6d5": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "TextArray",
          "TextArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                        SELECT a.*, count(1) over () as \"cnt!\"\n                        FROM nft_auction_search a\n                        INNER JOIN nft n ON a.nft = n.address\n                        WHERE\n                        (n.owner = ANY($1) OR array_length($1::varchar[], 1) is null)\n                        AND (n.collection = ANY($2) OR array_length($2::varchar[], 1) is null)\n                        AND (a.nft = ANY($3) OR array_length($3::varchar[], 1) is null)\n                        ORDER BY a.created_at DESC\n                        LIMIT $4 OFFSET $5"
  },
  "571bb4619c90d008e99999de359049942de04c4ce3e56a137f296e7af58812de": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "TextArray",
          "TextArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                        SELECT a.*, count(1) over () as \"cnt!\"\n                        FROM nft_auction_search a\n                        INNER JOIN nft n ON a.nft = n.address\n                        WHERE\n                        (n.owner = ANY($1) OR array_length($1::varchar[], 1) is null)\n                        AND (n.collection = ANY($2) OR array_length($2::varchar[], 1) is null)\n                        AND (a.nft = ANY($3) OR array_length($3::varchar[], 1) is null)\n                        ORDER BY a.bids_count ASC\n                        LIMIT $4 OFFSET $5"
  },
  "6393fd1a96c88bbd4db46c9fe391ccf98b38ea7179c53f78d9d4a99fd1ddbe07": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft_name",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "collection_name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "object_type!",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "image",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n                select ag.address as \"address!\", nft_name, collection_name, object_type as \"object_type!\", image\n                from (\n                     select n.address,\n                            n.name     nft_name,\n                            nc.name    collection_name,\n                            'nft'   as object_type,\n                            CASE\n                                WHEN m.meta is not null THEN m.meta::jsonb -> 'preview' ->> 'source'\n                                END as \"image\",\n                            case\n                                when lower(n.address) = lower($1) then 10\n                                when lower(n.name) = lower($1) then 9\n                                when n.name like '' || $1 || ' %' then 7.9\n                                when n.name like '% ' || $1 || '' then 7.86\n                                when n.name like '%' || $1 || '' then 7.855\n                                when n.name like '' || $1 || '%' then 7.85\n                                when n.name like '% ' || $1 || ' %' then 7.7\n                                when n.name like '%' || $1 || '%' then 7\n                                when n.address ilike '%' || $1 || '%' then 5\n                                else 1\n                                end    priority\n                     from nft n\n                              left join nft_metadata m on n.address = m.nft\n                              join nft_collection nc on n.collection = nc.address and nc.verified\n                     where (n.name ilike '%' || $1 || '%'\n                         or n.description ilike '%' || $1 || '%'\n                         or n.address ilike '%' || $1 || '%')\n                       and not n.burned\n\n                     union all\n\n                     select c.address,\n                            null            nft_name,\n                            c.name          collection_name,\n                            'collection' as object_type,\n                            c.logo          \"image\",\n                            case\n                                when lower(c.address) = lower($1) then 20\n                                when lower(c.name) = lower($1) then 19\n                                when c.name like '' || $1 || ' %' then 8.9\n                                when c.name like '% ' || $1 || '' then 8.86\n                                when c.name like '%' || $1 || '' then 8.855\n                                when c.name like '' || $1 || '%' then 8.85\n\n                                when c.name like '% ' || $1 || ' %' then 8.7\n                                when c.address ilike '%' || $1 || '%' then 6\n                                else 2\n                                end         priority\n                     from nft_collection c\n                     where (c.name ilike '%' || $1 || '%'\n                         or c.description ilike '%' || $1 || '%'\n                         or c.address ilike '%' || $1 || '%')\n                       and c.verified\n                     ) ag\n                order by ag.priority desc\n                limit 20\n            "
  },
  "64d4115b83f79a62586db5a88db7500769541621b34ed7afabd125c22c0a258c": {
    "describe": {
      "columns": [
        {
          "name": "nft",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "meta",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "updated",
          "ordinal": 2,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT * FROM nft_metadata WHERE nft_metadata.nft = $1"
  },
  "66b4eccd0757b4cd9eed0a5a501c6b8644387188004182433fdcf12c597df8b9": {
    "describe": {
      "columns": [
        {
          "name": "collection!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "logo",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "floor_price",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "total_volume_usd_now!",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "total_volume_usd_previous!",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "owners_count!",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "nfts_count!",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "total_rows_count!",
          "ordinal": 8,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Timestamp",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "with periods as (\n    select\n        $1::timestamp as date_from,\n        $2::timestamp as date_to,\n        'current' as period_type\n    union all\n    select\n        $1::timestamp - ($2::timestamp - $1::timestamp)::interval as date_from,\n        $1::timestamp - interval '1 seconds'                      as date_to,\n        'previous'                                                as period_type\n)\nselect\n    c.address                                       as \"collection!\",\n    c.name,\n    c.logo,\n    least(direct_sell.price_usd, auction.price_usd) as \"floor_price\",\n    coalesce(total_volume.cur, 0)                   as \"total_volume_usd_now!\",\n    coalesce(total_volume.prev, 0)                  as \"total_volume_usd_previous!\",\n    coalesce(nft_counter.owners_count, 0)::integer  as \"owners_count!\",\n    coalesce(nft_counter.cnt, 0)::integer           as \"nfts_count!\",\n    (count(1) over ())::integer                     as \"total_rows_count!\"\nfrom nft_collection c\nleft join lateral (\n    select min(\n        case\n            when\n                n.address is not null\n            then\n                tup.usd_price * na.min_bid\n            else 0 end\n        ) as price_usd\n    from nft_auction na\n    join roots r\n        on r.address = na.root\n    join nft n\n        on n.address = na.nft and\n           n.collection = c.address and\n           not n.burned\n    left join token_usd_prices tup\n        on tup.token = na.price_token\n    where na.status = 'active' and\n          (na.finished_at = to_timestamp(0) or\n           na.finished_at > now())\n) as auction on true\n\nleft join lateral (\n    select min(\n        case\n            when\n                n.address is not null\n            then\n                tup.usd_price * ds.price\n            else\n                0\n            end\n        ) as price_usd\n    from nft_direct_sell ds\n    join roots r\n        on r.address = ds.root\n    join nft n\n        on n.address = ds.nft and\n           n.collection = c.address and\n           not n.burned\n    left join token_usd_prices tup\n        on tup.token = ds.price_token\n    where ds.state = 'active' and\n          (ds.expired_at = to_timestamp(0) or\n           ds.expired_at > now()::timestamp)\n) as direct_sell on true\n\nleft join lateral (\n    select\n        count(1) cnt,\n        count(distinct owner) owners_count\n    from nft n\n    where n.burned = false and\n          n.collection = c.address\n) as nft_counter on true\n\nleft join lateral (\n    select\n        sum(\n            case\n                when\n                    ag.period_type = 'current'\n                then\n                    ag.price_usd\n                else\n                    0\n            end\n        ) cur,\n        sum(\n            case\n                when\n                    ag.period_type = 'previous'\n                then\n                    ag.price_usd\n                else\n                    0\n            end\n        ) prev\n    from (\n        select\n            p.period_type,\n            case\n                when\n                    n.address is not null\n                then\n                    tup.usd_price * ndb.price\n                else\n                    0\n            end as price_usd\n        from periods p\n        left join nft_direct_buy ndb\n            on ndb.updated between p.date_from and p.date_to and\n               ndb.state = 'filled'\n        left join roots r\n            on r.address = ndb.root\n        left join token_usd_prices tup\n            on tup.token = ndb.price_token\n        left join nft n\n            on ndb.nft = n.address and\n               n.collection = c.address and\n               not n.burned and r.address is not null\n        union all\n        select\n            p.period_type,\n            case\n                when\n                    n.address is not null\n                then\n                    tup.usd_price * nds.price\n                else\n                    0\n            end as price_usd\n        from periods p\n        left join nft_direct_sell nds\n            on nds.state = 'filled' and\n               nds.updated between p.date_from and p.date_to\n        left join token_usd_prices tup\n            on tup.token = nds.price_token\n        left join roots r\n            on r.address = nds.root\n        left join nft n\n            on nds.nft = n.address and\n               n.collection = c.address and\n               not n.burned and r.address is not null\n        union all\n        select\n            p.period_type,\n            case\n                when\n                    n.address is not null\n                then\n                    tup.usd_price * na.max_bid\n                else\n                    0\n            end as price_usd\n        from periods p\n        left join public.nft_auction na\n            on na.status = 'completed' and\n               na.finished_at between p.date_from and p.date_to\n        left join roots r\n            on r.address = na.root\n        left join nft n\n            on na.nft = n.address and\n               not n.burned and\n               r.address is not null\n            and n.collection = c.address\n        left join token_usd_prices tup\n            on tup.token = na.price_token\n    ) as ag\n) as total_volume on true\nwhere c.verified = true\norder by coalesce(total_volume.cur, 0) desc\nlimit $3\noffset $4"
  },
  "6aa0171bd39c176697b60d8cd5bb467d224f9a2ced653104ef56f4abebb2a812": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "buyer",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text",
          "VarcharArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                s.address as \"address!\", \n                s.created as \"created!\", \n                s.updated as \"updated!\", \n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\", \n                s.collection,\n                s.buyer,\n                s.price_token as \"price_token!\", \n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at, \n                s.expired_at,\n                s.state as \"state!: _\",\n                count(1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_buy_usd s\n            where s.nft = $1 and\n                  s.state = 'active' and\n                  (array_length($2::varchar[], 1) is null or \n                   s.state::varchar = any($2))\n            order by s.updated desc \n            limit $3 \n            offset $4\n            "
  },
  "6b3af2b372f86310afbafdb13db366d5d81b24db6237d33bd23cf4c04b71332f": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "buyer",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            select\n                s.address as \"address!\",\n                s.created as \"created!\",\n                s.updated as \"updated!\",\n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\",\n                s.collection,\n                s.buyer,\n                s.price_token as \"price_token!\",\n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at,\n                s.expired_at,\n                s.state as \"state!: _\",\n                1::bigint as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_buy_usd s\n            where s.address = $1"
  },
  "78181885c66439acfb4ba725e9dee27aec24c3eebbb57d517dad2052cf2be5b4": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "owner!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "updated!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "wallpaper",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "logo",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "total_price",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "max_price",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "owners_count",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "verified!",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "created!",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "first_mint",
          "ordinal": 12,
          "type_info": "Timestamp"
        },
        {
          "name": "nft_count!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "cnt!",
          "ordinal": 14,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        null,
        false,
        false,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select\n              c.address as \"address!\",\n              c.owner as \"owner!\",\n              c.name,\n              c.description,\n              c.updated as \"updated!\",\n              c.wallpaper,\n              c.logo,\n              c.total_price,\n              c.max_price,\n              nft.owners_count,\n              c.verified as \"verified!\",\n              c.created as \"created!\",\n              c.first_mint,\n              nft.count as \"nft_count!\",\n              count(1) over () as \"cnt!\"\n            from nft_collection c\n            left join lateral (\n                select\n                    count(1) as count,\n                    count(distinct owner)::int as owners_count\n                from nft n\n                where n.collection = c.address\n            ) nft on true\n            where c.owner = $1\n            limit $2\n            offset $3\n            "
  },
  "7b62a1ecbb1b75fffca517a353ecdb5f21b793422686f66b034b37bc66be485e": {
    "describe": {
      "columns": [
        {
          "name": "trait_type",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "trait_value",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "cnt!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n                WITH nft_attributes AS (\n                    SELECT jsonb_array_elements(nm.meta -> 'attributes') -> 'trait_type' AS trait_type,\n                           jsonb_array_elements(nm.meta -> 'attributes') -> 'value'      AS trait_value,\n                           nm.meta,\n                           n.collection                                                  AS nft_collection,\n                           nm.nft\n                    FROM nft_metadata nm\n                             JOIN nft n ON n.address = nm.nft\n                    WHERE nm.meta -> 'attributes' IS NOT NULL\n                      AND nm.nft = $1\n                ),\n                     nft_attributes_col AS (\n                         SELECT jsonb_array_elements(nm.meta -> 'attributes') -> 'trait_type' AS trait_type,\n                                jsonb_array_elements(nm.meta -> 'attributes') -> 'value'      AS trait_value,\n                                nm.nft\n                         FROM nft_metadata nm\n                         where nm.nft in (\n                             select n2.address\n                             from nft n2\n                                      join nft n3 on n3.address = $1\n                                 and n2.collection = n3.collection\n                         )\n                     )\n                SELECT (na.trait_type #>> '{}')::text as trait_type, (na.trait_value #>> '{}')::text as trait_value, COUNT(*) as \"cnt!\"\n                FROM nft_attributes na\n                         LEFT JOIN nft_attributes_col na2\n                                   ON na.trait_type = na2.trait_type\n                                       AND na.trait_value = na2.trait_value\n                GROUP BY na.trait_type, na.trait_value\n            "
  },
  "7f92349da3763d3098a62ac087873965c7973d2654145594530cbee0d049220e": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "seller",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            select\n                s.address as \"address!\",\n                s.created as \"created!\",\n                s.updated as \"updated!\",\n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\",\n                s.collection,\n                s.seller,\n                s.price_token as \"price_token!\",\n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at,\n                s.expired_at,\n                s.state as \"state!: _\",\n                count (1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_sell_usd s\n            where s.nft = $1 and\n                  s.state in ('active', 'expired')\n            order by s.created desc \n            limit 1\n            "
  },
  "86bd3cfbbefe614a3b49144be6267a12c6e2708b32a60743181880e0fac6c371": {
    "describe": {
      "columns": [
        {
          "name": "auction!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "buyer!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "created_at!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "next_bid_value!",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "next_bid_usd_value",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "tx_lt!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "active!",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "cnt!",
          "ordinal": 9,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            SELECT\n                auction as \"auction!\",\n                buyer as \"buyer!\",\n                price as \"price!\",\n                usd_price as \"usd_price\",\n                created_at as \"created_at!\",\n                next_bid_value as \"next_bid_value!\",\n                next_bid_usd_value as \"next_bid_usd_value\",\n                tx_lt as \"tx_lt!\",\n                active as \"active!\",\n                 count (1) over () as \"cnt!\"\n            FROM nft_auction_bids_view\n            WHERE auction = $1 AND active is true\n            LIMIT 1\n            "
  },
  "8720327736590c70c5d3a66d4424b317dd33f1fb92747fd863e24ea717917fd1": {
    "describe": {
      "columns": [
        {
          "name": "fee_numerator!",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator!",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "collection",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "nft",
          "ordinal": 3,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          {
            "Custom": {
              "kind": {
                "Enum": [
                  "auction",
                  "sell",
                  "buy"
                ]
              },
              "name": "t_root_types"
            }
          }
        ]
      }
    },
    "query": "\n            select\n                case\n                    when \n                        fee.fee_numerator is not null and\n                        fee.fee_denominator is not null\n                    then\n                        fee.fee_numerator\n                    else\n                        (ne.args -> 'fee' -> 'numerator')::int\n                end \"fee_numerator!\",\n                case\n                    when \n                        fee.fee_numerator is not null and\n                        fee.fee_denominator is not null\n                    then\n                        fee.fee_denominator\n                    else\n                        (ne.args -> 'fee' -> 'denominator')::int\n                end \"fee_denominator!\",\n                fee.collection,\n                fee.nft\n            from nft_events ne\n            join roots r\n                on ne.address = r.address and \n                   r.code = $2::t_root_types\n            left join lateral (\n                select \n                    nc.fee_numerator, \n                    nc.fee_denominator, \n                    max(n.collection) collection, \n                    max(e.args ->> 'id') nft\n                from nft n\n                left join nft_events e\n                    on e.nft = n.address and \n                       e.event_type = 'nft_created'\n                join nft_collection nc \n                    on n.collection = nc.address and \n                       nc.fee_numerator is not null and \n                       nc.fee_denominator is not null\n                where n.owner = $1\n                group by nc.fee_numerator, nc.fee_denominator\n                order by min(nc.fee_numerator / nc.fee_denominator)\n                limit 1\n            ) as fee on true\n            where ne.event_type = 'market_fee_default_changed'\n            order by created_at desc, created_lt desc, id desc\n            limit 1\n            "
  },
  "8c48e1ce1067f12a09719997e4cd8e1b0203d05bcceeb7937c2831095b4cab94": {
    "describe": {
      "columns": [
        {
          "name": "auction!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "buyer!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "created_at!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "next_bid_value",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "tx_lt",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "active",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "usd_price",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "next_bid_usd_value",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "nft",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "cnt!",
          "ordinal": 12,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "TextArray",
          "Bool",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n        SELECT\n        x.auction as \"auction!\",\n        x.buyer as \"buyer!\",\n        x.price as \"price!\",\n        x.price_token,\n        x.created_at as \"created_at!\",\n        x.next_bid_value,\n        x.tx_lt,\n        x.active,\n        x.usd_price,\n        x.next_bid_usd_value,\n        x.nft,\n        x.collection,\n         count (1) over () as \"cnt!\"\n        FROM nft_auction_bids_view x\n        WHERE x.buyer = $1\n        AND (x.collection = ANY($2) OR array_length($2::varchar[], 1) is null)\n            AND ($3::bool is null OR $3::bool = false OR x.active is true)\n        ORDER BY x.created_at DESC LIMIT $4 OFFSET $5\n        "
  },
  "8f1a8147be7c57758773d8e80226d1ba8e63b21fd1d5ee96a302758363322ccb": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "owner!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "updated!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "wallpaper",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "logo",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "total_price",
          "ordinal": 7,
          "type_info": "Numeric"
        },
        {
          "name": "max_price",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "owners_count",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "verified!",
          "ordinal": 10,
          "type_info": "Bool"
        },
        {
          "name": "created!",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "first_mint",
          "ordinal": 12,
          "type_info": "Timestamp"
        },
        {
          "name": "nft_count!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "cnt!",
          "ordinal": 14,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        true,
        null,
        false,
        false,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n            select\n               c.address as \"address!\",\n               c.owner as \"owner!\",\n               c.name,\n               c.description,\n               c.updated as \"updated!\",\n               c.wallpaper,\n               c.logo,\n               c.total_price,\n               c.max_price,\n               nft.owners_count,\n               c.verified as \"verified!\",\n               c.created as \"created!\",\n               c.first_mint,\n               nft.count as \"nft_count!\",\n               count(1) over () as \"cnt!\"\n            from nft_collection c\n            left join lateral (\n                select\n                    count(1) as count,\n                    count(distinct owner)::int as owners_count\n                from nft n\n                where n.collection = c.address\n             ) nft on true\n            where c.address = any($1) and owner is not null\n            "
  },
  "9327157b59d314a5f9dbc93ea05ff3a7e920cd2536d94255dc10268bb25df6bc": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "seller",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text",
          "TextArray",
          "VarcharArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                s.address as \"address!\", \n                s.created as \"created!\", \n                s.updated as \"updated!\", \n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\", \n                s.collection,\n                s.seller,\n                s.price_token as \"price_token!\", \n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at, \n                s.expired_at,\n                s.state as \"state!: _\",\n                count (1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_sell_usd s\n            where s.seller = $1 and\n                  (s.collection = any($2) or \n                   array_length($2::varchar[], 1) is null) and\n                  (array_length($3::varchar[], 1) is null or \n                   s.state::varchar = any($3))\n            order by s.updated desc \n            limit $4 \n            offset $5\n            "
  },
  "9436339875b65e885be672b7f758da7d0c730d284a43dff9d2d21c7fbb453b38": {
    "describe": {
      "columns": [
        {
          "name": "ts!",
          "ordinal": 0,
          "type_info": "Timestamp"
        },
        {
          "name": "usd_price!",
          "ordinal": 1,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "Timestamp",
          "Timestamp"
        ]
      }
    },
    "query": "\n                 select \n                    ag.dt as \"ts!\", \n                    (price * tup.usd_price) as \"usd_price!\"\n                 from (\n                    select \n                        t.finished_at dt, \n                        t.price_token, \n                        t.price\n                    from nft_direct_sell t\n                    join roots r \n                        on t.root = r.address\n                    where t.nft = $1 and\n                          t.finished_at between $2 and $3 and\n                          t.state = 'filled'\n                    union all\n                    select \n                        t.finished_at, \n                        t.price_token, \n                        t.price\n                    from nft_direct_buy t\n                    join roots r \n                        on t.root = r.address\n                    where t.nft = $1 and\n                          t.finished_at between $2 and $3 and\n                          t.state = 'filled'\n                    union all\n                    select \n                        t.finished_at, \n                        t.price_token, \n                        t.max_bid\n                    from nft_auction t\n                    join roots r \n                        on t.root = r.address\n                    where t.nft = $1 and \n                          t.finished_at between $2 and $3 and\n                          t.status = 'completed'\n                 ) as ag\n                 join token_usd_prices tup\n                      on tup.token = ag.price_token\n                 where (price * tup.usd_price) is not null\n                 order by 1\n            "
  },
  "9d4e961f644bdbd0d62675d8d3961bd303b0c29defe6e91104fecc9492663974": {
    "describe": {
      "columns": [
        {
          "name": "auction!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "buyer!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "created_at!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "next_bid_value",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "tx_lt",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "active",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "usd_price",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "next_bid_usd_value",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "nft",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "cnt!",
          "ordinal": 12,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "TextArray",
          "Bool",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            SELECT\n            x.auction as \"auction!\",\n            x.buyer as \"buyer!\",\n            x.price as \"price!\",\n            x.price_token,\n            x.created_at as \"created_at!\",\n            x.next_bid_value,\n            x.tx_lt,\n            x.active,\n            x.usd_price,\n            x.next_bid_usd_value,\n            x.nft,\n            x.collection,\n             count (1) over () as \"cnt!\"\n            FROM nft_auction_bids_view x\n                join nft n on x.nft = n.address\n                and (x.collection = ANY($2) OR array_length($2::varchar[], 1) is null)\n            WHERE x.owner = $1\n                and (x.active = true OR ($3::bool IS NULL OR $3::bool = false))\n            ORDER BY x.created_at DESC LIMIT $4 OFFSET $5\n        "
  },
  "a4e5336b8d46f435eb0036f6939b71cde2ecf9dbe6b158ee1770f8c551bc1445": {
    "describe": {
      "columns": [
        {
          "name": "auction!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "buyer!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "created_at!",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "next_bid_value!",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "next_bid_usd_value",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "tx_lt!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "active!",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "cnt!",
          "ordinal": 9,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n        SELECT\n            auction as \"auction!\",\n            buyer as \"buyer!\",\n            price as \"price!\",\n            usd_price as \"usd_price\",\n            created_at as \"created_at!\",\n            next_bid_value as \"next_bid_value!\",\n            next_bid_usd_value as \"next_bid_usd_value\",\n            tx_lt as \"tx_lt!\",\n            active as \"active!\",\n            count (1) over () as \"cnt!\"\n        FROM nft_auction_bids_view\n        WHERE auction = $1\n        ORDER BY created_at DESC LIMIT $2 OFFSET $3"
  },
  "a5ba16a60eb92c566c5854ad5dc0eea985e2a9e0dabbda0ef60d01dd1ff1fe48": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n                SELECT a.*, count(1) over () as \"cnt!\" FROM nft_auction_search a\n                WHERE a.nft = $1 and a.\"status: _\" in ('active', 'expired')\n                order by a.created_at DESC limit 1"
  },
  "b45f1108e0c47b8afde47b9b16173125d00737f9129c538cc467b0237c1899a2": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "code!",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            select \n                r.address as \"address!\", \n                r.code::text as \"code!\" \n            from roots r\n            "
  },
  "b4fc9c860ede93ef7ea1999c00c6f892a235bc94804a0af398dafdb1ffc9298c": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "buyer",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n            select\n                s.address as \"address!\",\n                s.created as \"created!\",\n                s.updated as \"updated!\",\n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\",\n                s.collection,\n                s.buyer,\n                s.price_token as \"price_token!\",\n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at,\n                s.expired_at,\n                s.state as \"state!: _\",\n                1::bigint as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_buy_usd s\n            where s.address = any($1)\n            "
  },
  "b71d731411f1c873b758244189dde331d6fbab3775b0ce2a741fbc4d58cccf04": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "seller",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n            select\n                s.address as \"address!\",\n                s.created as \"created!\",\n                s.updated as \"updated!\",\n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\",\n                s.collection,\n                s.seller,\n                s.price_token as \"price_token!\",\n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at,\n                s.expired_at,\n                s.state as \"state!: _\",\n                count (1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_sell_usd s\n            where s.address = any($1)"
  },
  "b9c3abc55a2515e2a6e060d8d1422c44ae58c700a8e129ccf87cd76752670e79": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "owner",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "updated",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "wallpaper",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "logo",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "total_price",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "max_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "owners_count",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "verified",
          "ordinal": 11,
          "type_info": "Bool"
        },
        {
          "name": "nft_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "floor_price_usd",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "total_volume_usd",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "attributes",
          "ordinal": 15,
          "type_info": "Json"
        },
        {
          "name": "first_mint",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "cnt!",
          "ordinal": 17,
          "type_info": "Int8"
        },
        {
          "name": "previews!",
          "ordinal": 18,
          "type_info": "Json"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n            select \n                c.*, \n                1::bigint as \"cnt!\", \n                '[]'::json as \"previews!\"\n            from nft_collection_details c\n            where c.address = $1\n            "
  },
  "c853db650143701750ebf0680a529a7f1da19d6148f3d2bd3b94135c00f9aad2": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "nft",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "wallet_for_bids",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "price_token",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "start_price",
          "ordinal": 4,
          "type_info": "Numeric"
        },
        {
          "name": "max_bid",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "min_bid",
          "ordinal": 6,
          "type_info": "Numeric"
        },
        {
          "name": "status: _",
          "ordinal": 7,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "finished_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_from",
          "ordinal": 11,
          "type_info": "Varchar"
        },
        {
          "name": "bids_count",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "last_bid_value",
          "ordinal": 13,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_usd_value",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "last_bid_ts",
          "ordinal": 15,
          "type_info": "Timestamp"
        },
        {
          "name": "start_usd_price",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "max_usd_bid",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "min_usd_bid",
          "ordinal": 18,
          "type_info": "Numeric"
        },
        {
          "name": "fee_numerator",
          "ordinal": 19,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 20,
          "type_info": "Int4"
        },
        {
          "name": "cnt!",
          "ordinal": 21,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        SELECT a.*, count(1) over () as \"cnt!\" FROM nft_auction_search a WHERE a.address = $1"
  },
  "c945ee0648b1a8d8c85f6bb3c23866178933e1137ae258b0e6f92e5d43937c49": {
    "describe": {
      "columns": [
        {
          "name": "address!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "created!",
          "ordinal": 1,
          "type_info": "Timestamp"
        },
        {
          "name": "updated!",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt!",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "nft!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 5,
          "type_info": "Varchar"
        },
        {
          "name": "buyer",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "price_token!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "price!",
          "ordinal": 8,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price",
          "ordinal": 9,
          "type_info": "Numeric"
        },
        {
          "name": "finished_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "expired_at",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "state!: _",
          "ordinal": 12,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_tokens",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_buy_state"
            }
          }
        },
        {
          "name": "cnt!",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "fee_numerator",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "fee_denominator",
          "ordinal": 15,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Text",
          "TextArray",
          "VarcharArray",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n            select \n                s.address as \"address!\", \n                s.created as \"created!\", \n                s.updated as \"updated!\", \n                s.tx_lt as \"tx_lt!\",\n                s.nft as \"nft!\", \n                s.collection,\n                s.buyer,\n                s.price_token as \"price_token!\", \n                s.price as \"price!\",\n                s.usd_price,\n                s.finished_at, \n                s.expired_at,\n                s.state as \"state!: _\",\n                count(1) over () as \"cnt!\",\n                s.fee_numerator,\n                s.fee_denominator\n            from nft_direct_buy_usd s\n            where s.buyer = $1 and\n                  (s.collection = any($2) or \n                   array_length($2::varchar[], 1) is null) and\n                  (array_length($3::varchar[], 1) is null or \n                   s.state::varchar = any($3))\n            order by s.updated desc \n            limit $4 \n            offset $5\n            "
  },
  "d1bfcb575496dc93a38ac0f793d8541fea297251c7af10dbfd327a4831e45b45": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Numeric",
          "Timestamp"
        ]
      }
    },
    "query": "\n            INSERT INTO token_usd_prices (token, usd_price, ts)\n            VALUES ($1::varchar, $2, $3)\n            ON CONFLICT (token) DO UPDATE\n            SET\n                usd_price = EXCLUDED.usd_price,\n                ts = EXCLUDED.ts;\n            "
  },
  "e5df6c7f6afb1373f1d74400d4e31f7d641fec15a68878348a874f5c082d801b": {
    "describe": {
      "columns": [
        {
          "name": "nft",
          "ordinal": 0,
          "type_info": "Varchar"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "JsonbArray"
        ]
      }
    },
    "query": "\n        select distinct a.nft\n        from nft_attributes a\n        where a.collection = $1\n        and a.trait_type = $2\n        and a.value = ANY($3::jsonb[])\n        order by 1 asc"
  },
  "e96fa82557ea7b0ff91d35a3f8755d8823d8c50ab785d1b0e45c19eab4806abd": {
    "describe": {
      "columns": [
        {
          "name": "content",
          "ordinal": 0,
          "type_info": "Json"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "TextArray",
          "TextArray",
          "Text",
          "Text",
          "TextArray",
          "Int8",
          "Int8",
          "Bool"
        ]
      }
    },
    "query": "/* event cat, event type, owner, nft, collection, offset, limit */\n\nwith result as (\n    select\n        ne.*,\n        (ne.args ->> 'from')::int             f,\n        (ne.args ->> 'to')::int               t,\n        nm.meta -> 'preview' ->> 'source'  as preview_url,\n        n.description,\n        n.name,\n        n.owner,\n        nm.meta,\n        auction.args                          auction_args,\n        case\n            when\n                $8\n            then\n                count(1) over ()\n            else\n                0\n        end total_rows,\n        direct_sell_chaned_owner.new_owner as new_owner,\n        direct_buy_chaned_owner.old_owner  as old_owner\n    from nft_events ne\n    join nft n\n        on ne.nft = n.address\n    join nft_metadata nm\n        on ne.nft = nm.nft\n    join nft_collection nc\n       on nc.address = n.collection\n--        and nc.verified = true\n\n    left join lateral (\n        select\n            n.args\n        from nft_events n\n        inner join nft_events n_deploy\n            on n_deploy.event_type = 'auction_deployed' and\n               n.address::text = n_deploy.args ->> 'offer'\n        inner join roots r\n            on r.address = n_deploy.address\n        where\n            n.event_cat = ne.event_cat and\n            n.event_type = 'auction_active' and\n            n.address = ne.address and\n            n.created_lt < ne.created_lt and\n            ne.event_type in ('auction_complete', 'auction_cancelled', 'auction_bid_placed')\n        order by n.created_lt\n        limit 1\n    ) auction on true\n\n    left join lateral (\n        select n.args ->> 'new_owner' new_owner\n        from nft_events n\n        inner join nft_events n_deploy\n            on n_deploy.event_type = 'direct_sell_deployed' and\n               n.address::text = n_deploy.args ->> 'direct_sell'\n        inner join roots r\n            on r.address = n_deploy.address\n        where n.event_cat = 'nft'\n          and n.event_type = 'nft_owner_changed'\n          and n.nft = ne.nft\n          and n.created_lt >= ne.created_lt\n          and ((ne.args ->> 'from')::int = 2 and (ne.args ->> 'to')::int = 3 and\n               ('SellPurchased' = any ($2) and ne.event_cat = 'direct_sell'))\n          and n.args ->> 'old_owner' = ne.args -> 'value2' ->> 'creator'\n        order by n.created_lt\n        limit 1\n    ) direct_sell_chaned_owner on true\n\n    left join lateral (\n        select n.args ->> 'old_owner' old_owner\n        from nft_events n\n        inner join nft_events n_deploy\n            on n_deploy.event_type = 'direct_buy_deployed' and\n               n.address::text = n_deploy.args ->> 'direct_buy'\n        inner join roots r\n            on r.address = n_deploy.address\n        where n.event_cat = 'nft'\n          and n.event_type = 'nft_owner_changed'\n          and nc.verified = true\n          and n.nft = ne.nft\n          and n.created_lt >= ne.created_lt\n          and ((ne.args ->> 'from')::int = 2 and (ne.args ->> 'to')::int = 3 and\n               ('OfferFilled' = any ($2) and ne.event_cat = 'direct_buy'))\n          and n.args ->> 'new_owner' = ne.args -> 'value2' ->> 'creator'\n        order by n.created_lt\n        limit 1\n    ) direct_buy_chaned_owner on true\n\n    where\n        ($3 in (ne.args -> 'value0' ->> 'subject_owner',\n                ne.args -> 'value2' ->> 'creator',\n                ne.args ->> 'buyer',\n                ne.args ->> 'seller',\n                ne.args ->> 'old_owner',\n                ne.args ->> 'new_owner'\n--              auction.args ->> 'subject_owner',\n--              direct_buy_chaned_owner.old_owner,\n--              direct_sell_chaned_owner.new_owner\n               ) or\n          $3 is null) and\n        (ne.nft = $4 or\n         $4 is null) and\n        (n.collection = any ($5) or\n         $5 = '{}') and\n        (ne.event_cat::text = any ($1) or\n         $1 = '{}') and\n        (\n            ((ne.args ->> 'from')::integer = 0 and\n             (ne.args ->> 'to')::integer = 2) or\n\n            ((ne.args ->> 'from')::integer = 2 and\n             (ne.args ->> 'to')::integer = 3) or\n\n            ((ne.args ->> 'from')::integer = 2 and\n             (ne.args ->> 'to')::integer = 4) or\n\n            ne.event_type in (\n                'auction_active',\n                'auction_cancelled',\n                'auction_bid_placed',\n                'auction_complete',\n                'nft_created',\n                'nft_owner_changed'\n            )\n        ) and\n        (\n            ('Mint' = any($2) and\n             ne.event_type = 'nft_created') or\n\n            ('Transfer' = any($2) and\n             ne.event_type = 'nft_owner_changed') or\n\n            ('AuctionActive' = any($2) and\n             ne.event_type = 'auction_active') or\n\n            ('AuctionBidPlaced' = any($2) and\n             ne.event_type = 'auction_bid_placed') or\n\n            ('AuctionCanceled' = any($2) and\n             ne.event_type = 'auction_cancelled') or\n\n            ('AuctionComplete' = any($2) and\n             ne.event_type = 'auction_complete') or\n\n            ((ne.args ->> 'from')::int = 0 and\n             (ne.args ->> 'to')::int = 2 and\n\n             (('OfferActive' = any($2) and\n               ne.event_cat = 'direct_buy') or\n\n              ('SellActive' = any($2) and\n               ne.event_cat = 'direct_sell'))\n            ) or\n\n            ((ne.args ->> 'from')::int = 2 and\n             (ne.args ->> 'to')::int = 3 and\n\n             (('OfferFilled' = any($2) and\n               ne.event_cat = 'direct_buy') or\n\n              ('SellPurchased' = any ($2) and\n               ne.event_cat = 'direct_sell'))\n            ) or\n\n            ((ne.args ->> 'from')::int = 2 and\n             (ne.args ->> 'to')::int = 4 and\n\n             (('SellCanceled' = any ($2) and\n               (ne.event_cat = 'direct_sell')) or\n\n              ('OfferCanceled' = any ($2) and\n               ne.event_cat = 'direct_buy'))\n            ) or ($2) = '{}'\n        )\n    order by ne.created_at desc, ne.id desc\n    limit $6\n    offset $7\n)\nselect\n    json_build_object(\n        'totalRows',\n        coalesce(max(r.total_rows), 0),\n\n        'data',\n        coalesce(json_agg(json_build_object(\n            'eventType',\n            case\n                when\n                    r.f = 0 and\n                    r.t = 2 and\n                    r.event_cat = 'direct_sell'\n                then\n                    'sell_active'\n                when\n                    r.f = 0 and\n                    r.t = 2 and\n                    r.event_cat = 'direct_buy'\n                then\n                    'offer_active'\n                when\n                    r.f = 2 and\n                    r.t = 3 and\n                    r.event_cat = 'direct_sell'\n                then\n                    'sell_purchased'\n                when\n                    r.f = 2 and\n                    r.t = 3 and\n                    r.event_cat = 'direct_buy'\n                then\n                    'offer_filled'\n                when\n                    r.f = 2 and\n                    r.t = 4 and\n                    r.event_cat = 'direct_sell'\n                then\n                    'sell_canceled'\n                when\n                    r.f = 2 and\n                    r.t = 4 and\n                    r.event_cat = 'direct_buy'\n                then\n                    'offer_canceled'\n                when\n                    r.event_type = 'nft_created'\n                then\n                    'mint'\n                when\n                    r.event_type = 'nft_owner_changed'\n                then\n                    'transfer'\n                when\n                    r.event_type = 'auction_cancelled'\n                then\n                    'auction_canceled'\n                else\n                    r.event_type::text\n            end,\n\n            'id',\n            r.id,\n\n            'name',\n            r.name,\n\n            'description',\n            r.description,\n\n            'datetime',\n            r.created_at,\n\n            'address',\n            r.nft,\n\n            'previewUrl',\n            r.preview_url,\n\n            'mint',\n            case\n                when\n                    r.event_type = 'nft_created'\n                then\n                    json_build_object(\n                        'owner',\n                        r.args -> 'owner',\n\n                        'creator',\n                        r.args -> 'creator'\n                    )\n            end,\n\n            'transfer',\n            case\n                when\n                    r.event_type = 'nft_owner_changed'\n                then\n                    json_build_object(\n                        'from',\n                        r.args -> 'old_owner',\n\n                        'to',\n                        r.args -> 'new_owner'\n                    )\n            end,\n\n            'directSell',\n            case\n                when\n                    r.event_cat = 'direct_sell'\n                then\n                    json_build_object(\n                        'creator',\n                        r.args -> 'value2' -> 'creator',\n\n                        'startTime',\n                        r.args -> 'value2' -> 'start',\n\n                        'endTime',\n                        r.args -> 'value2' -> 'end',\n\n                        -- TODO: make better\n                        'status',\n                        case\n                            when\n                                r.args -> 'value2' ->> 'status' = 'create'\n                            then\n                                0\n                            when\n                                r.args -> 'value2' ->> 'status' = 'await_nft'\n                            then\n                                1\n                            when\n                                r.args -> 'value2' ->> 'status' = 'active'\n                            then\n                                2\n                            when\n                                r.args -> 'value2' ->> 'status' = 'filled'\n                            then\n                                3\n                            when\n                                r.args -> 'value2' ->> 'status' = 'cancelled'\n                            then\n                                4\n                            when\n                                r.args -> 'value2' ->> 'status' = 'expired'\n                            then\n                                5\n                        end,\n\n                        'price',\n                        r.args -> 'value2' ->> '_price',\n\n                        'usdPrice',\n                        ((r.args -> 'value2' ->> '_price')::numeric * curr.usd_price)::text,\n\n                        'paymentToken',\n                        r.args -> 'value2' -> 'token',\n\n                        'newOwner',\n                        r.new_owner\n                    )\n            end,\n\n            'directBuy',\n            case\n                when\n                    r.event_cat = 'direct_buy'\n                then\n                    json_build_object(\n                        'creator',\n                        r.args -> 'value2' -> 'creator',\n\n                        'startTime',\n                        r.args -> 'value2' -> 'start_time_buy',\n\n                        'endTime',\n                        r.args -> 'value2' -> 'end_time_buy',\n\n                        'durationTime',\n                        r.args -> 'value2' -> 'duration_time',\n\n                        'price',\n                        r.args -> 'value2' ->> '_price',\n\n                        'usdPrice',\n                        ((r.args -> 'value2' ->> '_price')::numeric * curr.usd_price)::text,\n\n                        -- TODO: make better\n                        'status',\n                        case\n                            when\n                                r.args -> 'value2' ->> 'status' = 'create'\n                            then\n                                0\n                            when\n                                r.args -> 'value2' ->> 'status' = 'await_tokens'\n                            then\n                                1\n                            when\n                                r.args -> 'value2' ->> 'status' = 'active'\n                            then\n                                2\n                            when\n                                r.args -> 'value2' ->> 'status' = 'filled'\n                            then\n                                3\n                            when\n                                r.args -> 'value2' ->> 'status' = 'cancelled'\n                            then\n                                4\n                            when\n                                r.args -> 'value2' ->> 'status' = 'expired'\n                            then\n                                5\n                        end,\n\n                        'spentToken',\n                        r.args -> 'value2' -> 'spent_token',\n\n                        'oldOwner',\n                        r.old_owner\n                    )\n            end,\n\n            'auction',\n            case\n                when\n                    event_cat = 'auction'\n                then\n                    json_build_object(\n                            'auctionActive',\n                            case\n                                when\n                                    r.event_type = 'auction_active'\n                                then\n                                    json_build_object(\n                                        'nftOwner',\n                                        r.args -> 'value0' -> 'subject_owner',\n\n                                        'auctionStartTime',\n                                        r.args -> 'value0' -> 'start_time',\n\n                                        'auctionEndTime',\n                                        r.args -> 'value0' -> 'finish_time',\n\n                                        'auctionDuration',\n                                        r.args -> 'value0' -> 'duration',\n\n                                        -- TODO: make better\n                                        'state',\n                                        1,\n\n                                        'paymentToken',\n                                        r.args -> 'value0' -> '_payment_token',\n\n                                        'price',\n                                        r.args -> 'value0' ->> '_price',\n\n                                        'usdPrice',\n                                        ((r.args -> 'value0' ->> '_price')::numeric * curr.usd_price)::text\n                                    )\n                            end,\n\n                            'auctionComplete',\n                            case\n                                when\n                                    r.event_type = 'auction_complete'\n                                then\n                                    json_build_object(\n                                        'nftOwner',\n                                        r.args -> 'seller',\n\n                                        'auctionStartTime',\n                                        --r.auction_args -> 'start_time',\n                                        0,\n\n                                        'auctionEndTime',\n                                        --r.auction_args -> 'finish_time',\n                                        0,\n\n                                        'auctionDuration',\n                                        --r.auction_args -> 'duration',\n                                        0,\n\n                                        'state',\n                                        3,\n\n                                        'paymentToken',\n                                        --r.auction_args -> '_payment_token',\n                                        '',\n\n                                        'maxBidValue',\n                                        r.args ->> 'value',\n\n                                        'maxBidAddress',\n                                        r.args -> 'buyer',\n\n                                        'price',\n                                        (r.args ->> 'value'),\n\n                                        'usdPrice',\n                                        ((r.args ->> 'value')::numeric * curr.usd_price)::text\n                                    )\n                            end,\n\n--                             'auctionCanceled',\n--                             case\n--                                 when\n--                                     r.event_type = 'auction_cancelled'\n--                                 then\n--                                     json_build_object(\n--                                         'nftOwner',\n--                                         r.auction_args -> 'subject_owner',\n--\n--                                         'auctionStartTime',\n--                                         r.auction_args -> 'start_time',\n--\n--                                         'auctionEndTime',\n--                                         r.auction_args -> 'finish_time',\n--\n--                                         'auctionDuration',\n--                                         r.auction_args -> 'duration',\n--\n--                                         'state',\n--                                         r.auction_args -> 'status',\n--\n--                                         'paymentToken',\n--                                         r.auction_args -> '_payment_token',\n--\n--                                         'price',\n--                                         r.auction_args -> '_price',\n--\n--                                         'usdPrice',\n--                                         ((r.auction_args ->> '_price')::numeric * curr.usd_price)::text\n--                                     )\n--                             end,\n\n                            'auctionBidPlaced',\n                            case\n                                when\n                                    r.event_type = 'auction_bid_placed'\n                                then\n                                    json_build_object(\n                                        'bidSender',\n                                        r.args -> 'buyer',\n\n                                        'paymentToken',\n                                        -- r.auction_args -> '_payment_token',\n                                        '',\n\n                                        'bidValue',\n                                        r.args ->> 'value',\n\n                                        'usdPrice',\n                                        ((r.args ->> 'value')::numeric * curr.usd_price)::text\n                                    )\n                            end\n                    )\n            end\n        )), '[]'::json)\n    ) content\nfrom result as r\nleft join lateral (\n    select\n        p.usd_price\n    from token_usd_prices p\n    where r.args -> 'value2' ->> 'token' = p.token::text or\n          r.args -> 'value2' ->> 'spent_token' = p.token::text or\n          r.auction_args -> 'value0' ->> '_payment_token' = p.token::text or\n          r.args -> 'value0' ->> '_payment_token' = p.token::text\n) curr on true\n"
  },
  "f26e2fa080a9a5a0a3947e3df39c4b0ad52fffe11d1b597e87d784713e5d6cb4": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Varchar",
          "Varchar",
          "VarcharArray"
        ]
      }
    },
    "query": "\n            SELECT count(*)\n            FROM nft_events e\n            WHERE\n                ($1::varchar is null OR e.nft = $1)\n                AND ($2::varchar is null OR e.collection = $2)\n                AND (array_length($3::varchar[], 1) is null OR e.event_type::varchar = ANY($3))\n            "
  },
  "f2e3b4928313463fe9184a1e0ad167d84729d9dffe27fedd684229fd51e78104": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "collection",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "owner",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "manager",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "description",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "burned",
          "ordinal": 6,
          "type_info": "Bool"
        },
        {
          "name": "updated",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "tx_lt",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "meta",
          "ordinal": 9,
          "type_info": "Jsonb"
        },
        {
          "name": "auction",
          "ordinal": 10,
          "type_info": "Varchar"
        },
        {
          "name": "auction_status: _",
          "ordinal": 11,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "created",
                  "active",
                  "cancelled",
                  "completed",
                  "expired"
                ]
              },
              "name": "auction_status"
            }
          }
        },
        {
          "name": "forsale",
          "ordinal": 12,
          "type_info": "Varchar"
        },
        {
          "name": "forsale_status: _",
          "ordinal": 13,
          "type_info": {
            "Custom": {
              "kind": {
                "Enum": [
                  "create",
                  "await_nft",
                  "active",
                  "filled",
                  "cancelled",
                  "expired"
                ]
              },
              "name": "direct_sell_state"
            }
          }
        },
        {
          "name": "best_offer",
          "ordinal": 14,
          "type_info": "Varchar"
        },
        {
          "name": "floor_price_usd",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "deal_price_usd",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price",
          "ordinal": 17,
          "type_info": "Numeric"
        },
        {
          "name": "floor_price_token",
          "ordinal": 18,
          "type_info": "Varchar"
        },
        {
          "name": "nft_id",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "total_count!",
          "ordinal": 20,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n                SELECT n.*, 1::bigint as \"total_count!\"\n                FROM nft_details n\n                WHERE n.address = $1\n            "
  }
}